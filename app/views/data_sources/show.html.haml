%table
  %tr
    %td.vcentered
      = data_source_logo(@data_source,'large') 
    %td.vcentered
      %h1{:style => 'padding-left: 1em'}
        = "Repository " + in_quotes(@data_source.title)
    %td.vcentered
      -if @data_source.contributor?(current_user)
        = link_to 'Edit', edit_data_source_path(@data_source)
        = link_to 'Delete', data_source_url(@data_source), :method => :delete, :confirm => "Do you really want to delete this repository?"

.help_info

- if @last_successful_import
  %fieldset.subsection
    %legend.subsection== Names in the Repository: #{display_big_int(@data_source.name_strings_count)}
    = render(:partial => "shared/names_search_browse", :locals => {:char_triples => @char_triples, :name_strings => @name_strings, :is_empty_search_result => @is_empty_search_result, :search_term => @search_term, :data_source => @data_source})


- if @data_source.contributor?(current_user)
  %fieldset.subsection
    %legend Self-Harvesting
    - last_import_scheduler_id = @last_import_scheduler.id rescue 0
    - scheduler_status = @last_import_scheduler.message rescue "Preparing..."
    
    - if @current_status == ImportScheduler::WAITING || @current_status == ImportScheduler::PROCESSING
      .spinner
        #import_in_progress{:import_scheduler_id => last_import_scheduler_id}
          = scheduler_status
    - if @last_successful_import
      #import_finished
        %h4= "Import Succeeded on #{format_date @last_successful_import.updated_at}" if @last_successful_import
    - if @current_status == ImportScheduler::FAILED
      %h4== Last import (#{format_date @current_import.updated_at}) Failed
    - elsif @current_status == ImportScheduler::UNCHANGED
      %h4== Last import (#{format_date @current_import.updated_at}) was not needed because data did not change

    - if (@current_status != ImportScheduler::WAITING && @current_status != ImportScheduler::PROCESSING)
      - form_for(@import_scheduler, :action => 'post') do |f|
        = f.hidden_field :data_source_id,  :value => @data_source.id
        = f.hidden_field :status, :value => ImportScheduler::WAITING
        = f.hidden_field :message, :value => 'Data are added to import que'
        = f.submit "Import data", :class => "submit_em", :id => "submit_import_data"

%fieldset.subsection
  %legend Statistics
  - if @current_status == ImportScheduler::NO_IMPORTS
    %p
      = 'No data yet' + (current_user && current_user.data_sources.include?(@data_source) ? ', do import first' : '') 
  - elsif @last_successful_import
    %p= link_to 'Overlap with other repositories',data_source_data_source_overlaps_url(@data_source)

    %p= "Number of names appearing only in this repository: #{@data_source.unique_names_count} (#{sprintf("%.2f",(@data_source.unique_names_count.to_f/@data_source.name_strings_count)*100) rescue 'N/A'}%)"
  - else
    %p
      Data are not imported yet
    /   
    / %p
    /   Potential Duplicates (placeholder)
    / %p
    /   = link_to 'Globally uniqe names', data_source_name_indices_url(@data_source, :search_type => NameIndex::SEARCH_UNIQUE_NAMES)

%fieldset.subsection
  %legend Information
  %p
    %b Description:
    =h @data_source.description
  %p
    %b Data url:
    =h @data_source.data_url
  %p
    %b Refresh period (days):
    =h @data_source.refresh_period_days



