#!/usr/bin/env python
import sys
from urllib import urlopen
import libxml2
import MySQLdb

RECORD_TEMPLATE = {"data_source_id": 123}

def connectDb():
    try:
        conn = MySQLdb.connect (host = "localhost",
            user = "dimus",
            passwd = "primus62",
            unix_socket = "/tmp/mysql.sock",
            db = "gna_dev")
    except MySQLdb.Error, e:
        print "Error %d: %s" % (e.args[0], e.args[1])
        sys.exit (1)
    return conn.cursor()

def prepare_record(c, record):
    c.execute("select id from name_strings where name = '%s'" % record["raw_name"])
    name_string_id = c.fetchone()
    if not name_string_id:
        c.execute("insert into name_strings (name) values ('%s')" % record["raw_name"])
        c.execute("select last_insert_id()")
        name_string_id = c.fetchone()
    return (125, name_string_id[0], record["uri"])    
def processNode(c, reader, current_var, record):
    if reader.NodeType() == 1:
        if reader.Name() == "dwc:ScientificName":
            current_var = "raw_name"    
        elif reader.Name() == "dc:source":
            current_var = "uri"
    elif reader.NodeType() == 15:
        if reader.Name() == "record":
            print prepare_record(c, record)
            record = RECORD_TEMPLATE
    elif reader.NodeType() == 3 and current_var:
        record[current_var] = reader.Value()
        current_var = None
    return (current_var, record)
    
def streamFile(filename):
    try:
        reader = libxml2.newTextReaderFilename(filename)
    except:
        print "cannot open %s" % (filename)
        return
    c = connectDb()
     
    current_var = None
    record = RECORD_TEMPLATE      
    ret = reader.Read()
    while ret == 1:
        current_var, record = processNode(c, reader, current_var, record)
        ret = reader.Read()

    if ret != 0:
        print "%s : failed to parse" % (filename)

f = 'http://betula.mbl.edu/index_fungorum_test/data.xml'
f = sys.path[0] + '/../spec/fixtures/feeds/index_fungorum_short.xml'

streamFile(f)
