<?xml version="1.0" ?>
<!--
 Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->

<schema name="Canonical Forms with Data Sources" version="1.1">
  <types>
    <fieldtype name="string"  class="solr.StrField" sortMissingLast="true" omitNorms="true"/>
    <fieldType name="integer" class="solr.IntField" omitNorms="true"/>
    
    <fieldType name="int" class="solr.TrieIntField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
    <fieldType name="float" class="solr.TrieFloatField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
    <fieldType name="long" class="solr.TrieLongField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>
    <fieldType name="double" class="solr.TrieDoubleField" precisionStep="0" omitNorms="true" positionIncrementGap="0"/>

    <!-- this is our main text type with all the taxon name filters -->
    <fieldType name="text" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.WordDelimiterFilterFactory"
          generateWordParts="1"
          generateNumberParts="1"
          catenateWords="1"
          catenateNumbers="1"
          catenateAll="0"
          splitOnCaseChange="1"
          splitOnNumerics="1"
          preserveOriginal="1" /> <!-- split up bi-maculata, 2maculata, 1766c, etc. -->
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.WordDelimiterFilterFactory"
          generateWordParts="1"
          generateNumberParts="1"
          catenateWords="0"
          catenateNumbers="0"
          catenateAll="0"
          splitOnCaseChange="1"
          splitOnNumerics="1"
          preserveOriginal="1" /> <!-- don't need the extra catenation on search - increase performance -->
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
      </analyzer>
    </fieldType>


    <!-- This is our *exact* text field, with limited tokenizers.
          Thought about whitespace tokenizer, but I think that would defeat the purpose! "Felis familiaris" would match on
          "felis", I think. Downside is, "felis familaris" won't match "felis     familiaris". -->
     <fieldType name="textExact" class="solr.TextField" positionIncrementGap="4">
       <analyzer type="index">
         <tokenizer class="solr.KeywordTokenizerFactory"/>
         <filter class="solr.LowerCaseFilterFactory"/>
         <filter class="solr.TrimFilterFactory"/>
       </analyzer>
       <analyzer type="query">
         <tokenizer class="solr.KeywordTokenizerFactory"/>
         <filter class="solr.LowerCaseFilterFactory"/>
         <filter class="solr.TrimFilterFactory"/>
       </analyzer>
     </fieldType>
   </types>
   
   <!--  
    PERFORMANCE NOTE: this schema includes many optional features and should not
 be used for benchmarking.  To improve performance one could
  - set stored="false" for all fields possible (esp large fields) when you
    only need to search on the field but don't need to return the original
    value.
  - set indexed="false" if you don't need to search on the field, but only
    return the field as a result of searching on other indexed fields.
  - remove all unneeded copyField statements
  - for best index size and searching performance, set "index" to false
    for all general text fields, use copyField to copy them to the
    catchall "text" field, and use that for searching.
  - For maximum indexing performance, use the StreamingUpdateSolrServer
    java client.
  - Remember to run the JVM in server mode, and use a higher logging level
    that avoids logging every request
    -->

   <fields>   
     <!-- general -->
     <field name="name_string_index_id"     type="string"   indexed="true"  stored="true"  multiValued="false" required="true"/>
     <field name="name_string_id"     type="int"   indexed="true"  stored="true"  multiValued="false" required="true"/>
     <field name="canonical_form_id"    type="int"   indexed="true"  stored="true"  multiValued="false" required="true"/> 
     <field name="name_string"    type="text"   indexed="true"  stored="true"  multiValued="false"/> 
     <field name="name_string_exact"    type="textExact"   indexed="true"  stored="true"  multiValued="false"/> 
     <copyField source="name_string" dest="name_string_exact"/>
     <field name="canonical_form"   type="text"   indexed="true"  stored="true"  multiValued="false" /> 
     <field name="canonical_form_exact"   type="textExact"   indexed="true"  stored="true"  multiValued="false" /> 
     <copyField source="canonical_form" dest="canonical_form_exact"/>
     <field name="canonical_form_size" type="int" indexed="true" stored="true" multiValued="false" />
     <field name="canonical_word1"   type="string"   indexed="true"  stored="true"  multiValued="false" /> 
     <field name="canonical_word2"   type="string"   indexed="true"  stored="true"  multiValued="false" /> 
     <field name="canonical_word2_stem"   type="string"   indexed="true"  stored="true"  multiValued="false" /> 
     <field name="canonical_word3"   type="string"   indexed="true"  stored="true"  multiValued="false" /> 
     <field name="canonical_word3_stem"   type="string"   indexed="true"  stored="true"  multiValued="false" /> 
     <field name="uninomial_auth"   type="string"   indexed="true"  stored="true"  multiValued="true" /> 
     <field name="uninomial_yr"   type="string"   indexed="true"  stored="true"  multiValued="true" /> 
     <field name="genus_auth"   type="string"   indexed="true"  stored="true"  multiValued="true" /> 
     <field name="genus_yr"   type="string"   indexed="true"  stored="true"  multiValued="true" /> 
     <field name="species_auth"   type="string"   indexed="true"  stored="true"  multiValued="true" /> 
     <field name="species_yr"   type="int"   indexed="true"  stored="true"  multiValued="true" /> 
     <field name="infraspecies_auth"   type="string"   indexed="true"  stored="true"  multiValued="true" /> 
     <field name="infraspecies_yr"   type="string"   indexed="true"  stored="true"  multiValued="true" /> 
     <field name="data_source_id"     type="int"   indexed="true"  stored="true"  multiValued="false" required="false"/>
     <field name="taxon_id"     type="string"   indexed="true"  stored="true"  multiValued="false" required="false"/>
     <field name="classification_path" type="string" indexed="true" stored="true" multiValued="true" />
     <field name="classification_path_verbatim" type="string" indexed="true" stored="true" multiValued="false" />
   </fields>

   <!-- field to use to determine and enforce document uniqueness. -->
   <uniqueKey>name_string_index_id</uniqueKey>

   <!-- field for the QueryParser to use when an explicit fieldname is absent -->
   <defaultSearchField>canonical_form</defaultSearchField>

   <!-- SolrQueryParser configuration: defaultOperator="AND|OR" -->
   <solrQueryParser defaultOperator="OR"/>
 </schema>


